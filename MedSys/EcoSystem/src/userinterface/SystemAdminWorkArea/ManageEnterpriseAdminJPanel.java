/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Common.ValidatePasswords;
import Business.Common.ValidateStrings;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Enterprise.EnterpriseDirectory;
import Business.Network.Network;
import Business.Role.AdminRole;
import Business.UserAccount.UserAccount;
import static Logger.Logger.logger;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.InputVerifier;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageEnterpriseAdminJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private EnterpriseDirectory enterpriseDirectory;

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    public ManageEnterpriseAdminJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        logger.log(Level.INFO, "ManageEnterpriseAdmin Started");
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        populateTable();
        addInputVerifiers();
        populateNetworkComboBox();
    }

    private void populateTable() {
        logger.log(Level.INFO, "populateTable ManageEnterpriseAdmin");
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[3];
                    row[0] = enterprise;
                    row[1] = network.getName();
                    row[2] = userAccount.getUsername();

                    model.addRow(row);
                }
            }
        }
    }

    private void populateNetworkComboBox(){
        logger.log(Level.INFO, "populateNetworkComboBox ManageEnterpriseAdmin");
        networkJComboBox.removeAllItems();
        
        for (Network network : system.getNetworkList()){
            networkJComboBox.addItem(network);
        }
    }
    
    private void addInputVerifiers(){
        logger.log(Level.INFO, "addInputVerifiers ManageEnterpriseAdmin");
    InputVerifier validateString = new ValidateStrings();
    nameJTextField.setInputVerifier(validateString);
    usernameJTextField.setInputVerifier(validateString);
    InputVerifier validatePassword = new ValidatePasswords();
    passwordJPasswordField.setInputVerifier(validatePassword);
    }
    private void populateEnterpriseComboBox(Network network){
        logger.log(Level.INFO, "populateEnterpriseComboBox ManageEnterpriseAdmin");
        enterpriseJComboBox.removeAllItems();
        
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            enterpriseJComboBox.addItem(enterprise);
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        enterpriseJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        manageEnt = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        submitJButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise Name", "Network", "Username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(206, 442, 405, 130));

        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 13, -1, -1));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 590, 93, -1));

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Tamil Sangam MN", 1, 18)); // NOI18N
        jLabel7.setText("Add User Admin");
        jLayeredPane1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 130, -1));

        jLabel1.setText("Network");
        jLayeredPane1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, -1, -1));

        networkJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboBoxActionPerformed(evt);
            }
        });
        jLayeredPane1.add(networkJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 140, -1));

        jLabel3.setText("Enterprise");
        jLayeredPane1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, -1, -1));

        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        enterpriseJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseJComboBoxActionPerformed(evt);
            }
        });
        jLayeredPane1.add(enterpriseJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, 136, -1));

        jLabel2.setText("Username");
        jLayeredPane1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, -1, -1));
        jLayeredPane1.add(usernameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 136, -1));

        jLabel4.setText("Password");
        jLayeredPane1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, -1, -1));
        jLayeredPane1.add(passwordJPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, 134, -1));

        jLabel5.setText("Enterprise Admin Name");
        jLayeredPane1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));
        jLayeredPane1.add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 136, -1));

        add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 405, 242));

        manageEnt.setFont(new java.awt.Font("Tamil MN", 1, 18)); // NOI18N
        manageEnt.setText("MANAGER ENTERPRISE ADMIN");
        add(manageEnt, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tamil Sangam MN", 1, 18)); // NOI18N
        jLabel8.setText("View User Admin");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 410, 140, -1));

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 20, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed
        logger.log(Level.INFO, "networkJComboBoxActionPerformed ManageEnterpriseAdmin");
        Network network = (Network) networkJComboBox.getSelectedItem();
        if (network != null){
            populateEnterpriseComboBox(network);
        }
        
        
    }//GEN-LAST:event_networkJComboBoxActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
    logger.log(Level.INFO, "submitJButtonActionPerformed ManageEnterpriseAdmin");
        try
       {    
        Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();
        Network network = (Network) networkJComboBox.getSelectedItem();
        String username = usernameJTextField.getText();
        String password = String.valueOf(passwordJPasswordField.getPassword());
        String name = nameJTextField.getText();
        
        for (Network network1 : system.getNetworkList())
        {
            for (Enterprise enterprise1 : network1.getEnterpriseDirectory().getEnterpriseList())
            {
                for (UserAccount user1 : enterprise1.getUserAccountDirectory().getUserAccountList())
                {
                    if (username.equalsIgnoreCase(user1.getUsername()))
                    {
                        JOptionPane.showMessageDialog(null, "Username already exists!","warning",JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }
            }
        }
        
        Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
        employee.setName(name);
        UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new AdminRole());
        JOptionPane.showMessageDialog(null, "Enterprise admin Account has been created successfully", "success",JOptionPane.PLAIN_MESSAGE);
        populateTable();
        resetFields();
       }
       catch(Exception e)
       {
        JOptionPane.showMessageDialog(this, "Please enter valid inputs", "warning",JOptionPane.WARNING_MESSAGE);    
       }    
    }//GEN-LAST:event_submitJButtonActionPerformed
    
        public void resetFields()
    {
        usernameJTextField.setText("");
        passwordJPasswordField.setText("");
        nameJTextField.setText("");
    }
        
    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        logger.log(Level.INFO, "backJButtonActionPerformed ManageEnterpriseAdmin");
        userProcessContainer.remove(this);
         Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnDeleteActionPerformed ManageEnterpriseAdmin");
        UserAccount userAccountToBeDeleted = null;
        int selectedRow = enterpriseJTable.getSelectedRow();
        if(selectedRow >= 0)
        {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "Would you like to delete the row ", "warning",dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                Enterprise enterprise = (Enterprise) enterpriseJTable.getValueAt(selectedRow, 0);
                for (Network network : system.getNetworkList()) {
                    this.enterpriseDirectory = network.getEnterpriseDirectory();
                }
                enterpriseDirectory.removeEnterprise(enterprise);
                JOptionPane.showMessageDialog(null, "Deleted successfully");
                populateTable();
            }

        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please select a row", "warning",JOptionPane.WARNING_MESSAGE);
        }
//            {
//                   
//                UserAccount userAccount = (UserAccount)enterpriseJTable.getValueAt(selectedRow, 2);
//                String entName = (String)enterpriseJTable.getValueAt(selectedRow, 0);
//                for (Network network : system.getNetworkList()) {
//                    for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
//                     if(entName.equals(enterprise.getName()))
//                     {
//                       for (UserAccount user1 : enterprise.getUserAccountDirectory().getUserAccountList()) {
//                       if(user1.getUsername().equals(userAccount.getUsername()))
//                       {
//                           userAccountToBeDeleted = user1;
//                        
//                       }
//                    }
//                     }
//                     enterprise.getUserAccountDirectory().removeUserAccount(userAccountToBeDeleted);
//                    }
                    
                
 
        
    
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void enterpriseJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterpriseJComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnDelete;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel manageEnt;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
