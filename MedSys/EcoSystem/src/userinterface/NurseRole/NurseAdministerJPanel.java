/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.NurseRole;

import Business.Enterprise.Enterprise;
import Business.Location.Location;
import Business.Medications.Medication;
import Business.Medications.MedicationAdministration;
import Business.Patients.Patient;
import Business.UserAccount.UserAccount;
import static Logger.Logger.logger;
import java.awt.CardLayout;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sanjeev MD
 */
public class NurseAdministerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NurseAdministerJPanel
     */
    private JPanel userProcessContainer;
    private Location location;
    private Enterprise enterprise;
    private UserAccount userAccount;

    public NurseAdministerJPanel(JPanel userProcessContainer, Location location, Enterprise enterprise, UserAccount userAccount) {
        logger.log(Level.INFO, "NurseAdministerJPanel");

        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.location = location;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.populateTable();
    }

    public void populateTable() {
        logger.log(Level.INFO, "populateTable --NurseAdministerJPanel");

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for (Patient pat : this.enterprise.getPatientDirectory().getPatientList()) {
            if (pat.getLocation() != null) {
                if (pat.getLocation().getName().equals(location.getName())) {
                    if (!pat.isIsDischarged()) {
                        Object[] row = new Object[1];
                        row[0] = pat;
                        model.addRow(row);
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 243, 140));

        jButton1.setText("Medications to Administer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, -1, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medication", "Route", "Frequency", "Duration", "Discontinued", "Completed"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
            jTable2.getColumnModel().getColumn(4).setResizable(false);
            jTable2.getColumnModel().getColumn(5).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 470, 120));

        jButton2.setText("Administer Medication");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 410, -1, -1));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medication", "Day", "Sequence"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 450, 470, 120));

        jButton3.setText("Administer Dose");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 590, -1, -1));

        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jButton5.setText("Clear Selection");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 230, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "jButton1ActionPerformed --NurseAdministerJPanel");

        jTable1.setEnabled(false);
        populateMedTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "jButton2ActionPerformed --NurseAdministerJPanel");

        jTable2.setEnabled(false);
        this.populatedoseTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void populateMedTable() {
        logger.log(Level.INFO, "populateMedTable --NurseAdministerJPanel");

        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {
            Patient patient = (Patient) jTable1.getValueAt(selectedRow, 0);
            if (patient.getMedList().getMedicationList().size() > 0) {
                for (Medication med : patient.getMedList().getMedicationList()) {
                    if (!med.isIsDischarged()) {
                        Object[] row = new Object[6];
                        row[0] = med;
                        row[1] = med.getRoute();
                        row[2] = med.getJ();
                        row[3] = med.getI();

                        if (med.isIsdiscontinue()) {
                            row[4] = "Yes";
                        } else {
                            row[4] = "No";
                        }
                        int flag = 0;
                        for (MedicationAdministration medAdmin : med.getMedAdmin()) {
                            if (!medAdmin.getIsAdministered()) {
                                row[5] = "No";
                                model.addRow(row);
                                flag = 1;
                                break;
                            }
                        }
                        if (flag == 0) {
                            row[5] = "Yes";
                            model.addRow(row);
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(userProcessContainer, "Please select a patient");
            return;
        }
    }

    private void populatedoseTable() {
        logger.log(Level.INFO, "populatedoseTable --NurseAdministerJPanel");

        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        model.setRowCount(0);
        int flag = 0;
        int selectedRow = jTable2.getSelectedRow();
        if (selectedRow >= 0) {
            Medication med = (Medication) jTable2.getValueAt(selectedRow, 0);
            if (!med.isIsdiscontinue()) {
                for (MedicationAdministration medAdmin : med.getMedAdmin()) {
                    if (!medAdmin.getIsAdministered()) {
                        Object[] row = new Object[3];
                        row[0] = med.getName();
                        row[1] = medAdmin;
                        row[2] = medAdmin.getTime();
                        model.addRow(row);
                        flag = 1;
                    }
                }
                if (flag == 0) {
                    populateMedTable();
                    jTable2.setEnabled(true);
                }
            } else {
                JOptionPane.showMessageDialog(userProcessContainer, "Medication has been discontinued by the doctor");
                return;
            }
        } else {
            JOptionPane.showMessageDialog(userProcessContainer, "Please select a mediaction to administer");
            return;
        }

    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "jButton3ActionPerformed --NurseAdministerJPanel");

        int selectedRow = jTable3.getSelectedRow();
        if (selectedRow == 0) {
            MedicationAdministration medAdmin = (MedicationAdministration) jTable3.getValueAt(selectedRow, 1);

            if (!medAdmin.getIsAdministered()) {

                medAdmin.setIsAdministered(Boolean.TRUE);
                medAdmin.setAdministeredBy(userAccount.getEmployee());
                JOptionPane.showMessageDialog(userProcessContainer, "Dose Administered");
                this.populatedoseTable();
                return;

            }
        } else if (selectedRow > 0) {
            JOptionPane.showMessageDialog(userProcessContainer, "Please select First dose to administer");
            return;
        } else {
            JOptionPane.showMessageDialog(userProcessContainer, "Please select a dose to administer");
            return;
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:   
        logger.log(Level.INFO, "jButton4ActionPerformed --NurseAdministerJPanel");

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "jButton5ActionPerformed --NurseAdministerJPanel");

        jTable1.setEnabled(true);
        jTable2.setEnabled(true);
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        model2.setRowCount(0);
        DefaultTableModel model3 = (DefaultTableModel) jTable3.getModel();
        model3.setRowCount(0);
        this.populateTable();
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables
}
