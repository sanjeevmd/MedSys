/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.EMS.EMSNurse;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.AdminOrganization;
import Business.Organization.ClinicianOrganization;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BloodrequestToBBfromEMS;
import Business.WorkQueue.MsgfromNurseToHospWorkRequest;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.TransportWorkRequest;
import Business.WorkQueue.EMSNurseWorkRequest;
import static Logger.Logger.logger;

import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author admin
 */
public class ProcessEMSNurseWorkRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProcessEMSNurseWorkRequest
     */
    private JPanel userProcessContainer;
    private OrganizationDirectory organizationDirectory;
    private Organization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EMSNurseWorkRequest nurse;
    private EcoSystem ecosystem;
    private Network network;

    public ProcessEMSNurseWorkRequestJPanel(JPanel userProcessContainer, UserAccount userAccount,
            EMSNurseWorkRequest nurse, EcoSystem ecosystem, Enterprise enterprise) {
        logger.log(Level.INFO, "ProcessEMSNurseWorkRequestJPanel");

        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.nurse = nurse;
        this.ecosystem = ecosystem;
        this.network = network;
        this.enterprise = enterprise;
        this.organization = organization;
        populatePatientName();
        populateComboBox();
        populateBB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        txtMessage = new javax.swing.JTextField();
        btnHospital = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtPatientName1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        transferHospital = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        btnBloodBank = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        comboBloodGroup = new javax.swing.JComboBox<>();
        txtNoofUnits = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnNo = new javax.swing.JRadioButton();
        btnYes = new javax.swing.JRadioButton();
        bloodBanks = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tamil MN", 1, 18)); // NOI18N
        jLabel2.setText("NURSE WORK AREA");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 180, 24));

        btnBack.setText(" Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnHospital.setText("Send Message to Hospital");
        btnHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalActionPerformed(evt);
            }
        });

        jLabel7.setText("Patient Name :");

        jLabel9.setText("Message :");

        transferHospital.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Hospital" }));
        transferHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferHospitalActionPerformed(evt);
            }
        });

        jLabel11.setText("Hospital :");

        jLabel12.setFont(new java.awt.Font("Tamil Sangam MN", 1, 18)); // NOI18N
        jLabel12.setText("Message to Hospital");

        jLayeredPane1.setLayer(txtMessage, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btnHospital, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtPatientName1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(transferHospital, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(transferHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jLabel12)))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(txtPatientName1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(btnHospital)
                        .addGap(93, 93, 93))))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtPatientName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(transferHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnHospital)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, 410, 220));

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnBloodBank.setText("Send Request to Blood Bank");
        btnBloodBank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBloodBankActionPerformed(evt);
            }
        });

        jLabel3.setText("BloodBank :");

        jLabel4.setText("Required Blood Group :");

        jLabel5.setText("No of units :");

        jLabel6.setText("Blood Needed :");

        comboBloodGroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose a blood group", "O+", "O-", "A+", "A-", "B+", "B-", "AB+", "AB-", " " }));

        txtNoofUnits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoofUnitsActionPerformed(evt);
            }
        });
        txtNoofUnits.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNoofUnitsKeyTyped(evt);
            }
        });

        jLabel10.setText("Patient Name :");

        buttonGroup1.add(btnNo);
        btnNo.setText("No");
        btnNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoActionPerformed(evt);
            }
        });

        buttonGroup1.add(btnYes);
        btnYes.setText("Yes");
        btnYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYesActionPerformed(evt);
            }
        });

        bloodBanks.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Blood Bank" }));

        jLabel13.setFont(new java.awt.Font("Tamil Sangam MN", 1, 18)); // NOI18N
        jLabel13.setText("Request to BloodBank");

        jLayeredPane2.setLayer(btnBloodBank, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(txtPatientName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(comboBloodGroup, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(txtNoofUnits, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(btnNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(btnYes, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(bloodBanks, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBloodBank, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95))
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6)))
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnYes)
                                .addGap(34, 34, 34)
                                .addComponent(btnNo))
                            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNoofUnits, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bloodBanks, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jLabel13)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(btnYes)
                    .addComponent(btnNo))
                .addGap(8, 8, 8)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNoofUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(bloodBanks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnBloodBank)
                .addGap(46, 46, 46))
        );

        add(jLayeredPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 310, 410, 280));
    }// </editor-fold>//GEN-END:initComponents

 

    private void populatePatientName() {
        logger.log(Level.INFO, "populatePatientName --ProcessEMSNurseWorkRequestJPanel");

        txtPatientName.setEnabled(false);
        txtPatientName1.setEnabled(false);
        btnBloodBank.setEnabled(false);
        bloodBanks.setEnabled(false);
        btnHospital.setEnabled(true);
        txtMessage.setEnabled(true);
        txtNoofUnits.setEnabled(false);
        comboBloodGroup.setEnabled(false);
        transferHospital.setEnabled(true);

        btnNo.setSelected(true);

        txtPatientName.setText(nurse.getEMSPatient().getPatientName());
        txtPatientName1.setText(nurse.getEMSPatient().getPatientName());

    }

    public void populateComboBox() {
        logger.log(Level.INFO, "populateComboBox --ProcessEMSNurseWorkRequestJPanel");

        for (Network net : ecosystem.getNetworkList()) {
            for (Enterprise enterprise : net.getEnterpriseDirectory().getEnterpriseList()) {
                if (!enterprise.getName().equals(this.enterprise.getName())
                        && enterprise.getEnterpriseType() == Enterprise.EnterpriseType.Hospital) {
                    transferHospital.addItem(enterprise.getName());
                }
            }
        }
    }

    public void populateBB() {
        logger.log(Level.INFO, "populateBB --ProcessEMSNurseWorkRequestJPanel");

        for (Network net : ecosystem.getNetworkList()) {
            for (Enterprise enterprise : net.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.BloodBank) {
                    bloodBanks.addItem(enterprise.getName());
                }
            }
        }
    }

    private void btnHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnHospitalActionPerformed --ProcessEMSNurseWorkRequestJPanel");
        if (transferHospital.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(userProcessContainer, "Please select the hospital you wish to send the message to");
            return;
        }

        String hospital = txtMessage.getText();
        if (hospital.isEmpty() || hospital == null) {
            JOptionPane.showMessageDialog(null, "Please provide inputs");
        }

        String patientName = txtPatientName.getText();

        MsgfromNurseToHospWorkRequest msg = new MsgfromNurseToHospWorkRequest(hospital, patientName);
        msg.setMessage(hospital);
        msg.setPatientName(patientName);
        msg.setSender(userAccount);
        msg.setStatus("Pending");

        for (Network network : ecosystem.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.Hospital && enterprise.getName().equals(transferHospital.getSelectedItem())) {
                    enterprise.getWorkQueue().getWorkRequestList().add(msg);
                    userAccount.getWorkQueue().getWorkRequestList().add(msg);
                    break;

                }
            }
        }

        JOptionPane.showMessageDialog(null, "Your message has been sent to Hospital");
        btnHospital.setEnabled(false);
        transferHospital.setEnabled(false);
        txtMessage.setEnabled(false);
        txtMessage.setText("");


    }//GEN-LAST:event_btnHospitalActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnBackActionPerformed --ProcessEMSNurseWorkRequestJPanel");

        if (btnBloodBank.isEnabled() == false && btnHospital.isEnabled() == false) {

            nurse.setStatus(EMSNurseWorkRequest.REQUEST_COMPLETED);

        }

        if (btnBloodBank.isEnabled() == true && btnHospital.isEnabled() == true) {
            JOptionPane.showMessageDialog(null, "Operation not allowed unless the work request is completed");
            return;
        }
        if (btnBloodBank.isEnabled() == true && btnHospital.isEnabled() == false) {
            JOptionPane.showMessageDialog(null, "Operation not allowed unless the work request is completed");
            return;
        }
        if (btnBloodBank.isEnabled() == false && btnHospital.isEnabled() == true) {
            JOptionPane.showMessageDialog(null, "Operation not allowed unless the work request is completed");
            return;
        }

        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        Component[] comps = this.userProcessContainer.getComponents();
        for (Component comp : comps) {
            if (comp instanceof EMSNurseWorkAreaJPanel) {
                EMSNurseWorkAreaJPanel createP = (EMSNurseWorkAreaJPanel) comp;
                createP.populatetable();
                createP.populatetable1();

            }
            layout.previous(userProcessContainer);
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnBloodBankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBloodBankActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnBloodBankActionPerformed --ProcessEMSNurseWorkRequestJPanel");

        if (bloodBanks.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(userProcessContainer, "Please select the BloodBank you like to request blood");
            return;
        }

        buttonGroup1.clearSelection();
        String noofUnits = txtNoofUnits.getText();
        if (noofUnits.length() > 1) {
            JOptionPane.showMessageDialog(null, "Maximum units allowed is 9");
            return;
        }
        if (comboBloodGroup.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Please choose a bloodgroup");
            return;
        }

        String bloodGroup = String.valueOf(comboBloodGroup.getSelectedItem());

        String patientName = txtPatientName.getText();

        BloodrequestToBBfromEMS blood = new BloodrequestToBBfromEMS(patientName, bloodGroup, noofUnits);
        blood.setPatientName(patientName);
        blood.setBloodGroup(bloodGroup);
        blood.setReqUnits(noofUnits);
        blood.setSender(userAccount);

        blood.setStatus(BloodrequestToBBfromEMS.REQUEST_PENDING);

        for (Network network : ecosystem.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.BloodBank && enterprise.getName().equals(bloodBanks.getSelectedItem())) {
                    enterprise.getWorkQueue().getWorkRequestList().add(blood);
                    userAccount.getWorkQueue().getWorkRequestList().add(blood);
                    break;
                }
            }
        }

        JOptionPane.showMessageDialog(null, "Your request has been sent to BloodBank");
        btnBloodBank.setEnabled(false);
        txtPatientName1.setText("");
        txtPatientName.setText("");
        txtNoofUnits.setText("");
        comboBloodGroup.setSelectedIndex(0);
        comboBloodGroup.setEnabled(false);
        txtNoofUnits.setEnabled(false);
        bloodBanks.setEnabled(false);
        btnYes.setEnabled(false);
        if (btnBloodBank.isEnabled() == false && btnHospital.isEnabled() == false) {

            nurse.setStatus(EMSNurseWorkRequest.REQUEST_COMPLETED);

        }

    }//GEN-LAST:event_btnBloodBankActionPerformed

    private void txtNoofUnitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoofUnitsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoofUnitsActionPerformed

    private void txtNoofUnitsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoofUnitsKeyTyped
        // TODO add your handling code here:
        logger.log(Level.INFO, "txtNoofUnitsKeyTyped --ProcessEMSNurseWorkRequestJPanel");

        char vchar = evt.getKeyChar();
        if (!(Character.isDigit(vchar))
                || (vchar == KeyEvent.VK_BACK_SPACE)
                || (vchar == KeyEvent.VK_DELETE)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Please enter a number");
        }
    }//GEN-LAST:event_txtNoofUnitsKeyTyped

    private void transferHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferHospitalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_transferHospitalActionPerformed

    private void btnNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnNoActionPerformed

    private void btnYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYesActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnYesActionPerformed --ProcessEMSNurseWorkRequestJPanel");

        btnBloodBank.setEnabled(true);
        txtNoofUnits.setEnabled(true);
        comboBloodGroup.setEnabled(true);
        bloodBanks.setEnabled(true);
        btnNo.setEnabled(false);
    }//GEN-LAST:event_btnYesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> bloodBanks;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBloodBank;
    private javax.swing.JButton btnHospital;
    private javax.swing.JRadioButton btnNo;
    private javax.swing.JRadioButton btnYes;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> comboBloodGroup;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JComboBox<String> transferHospital;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextField txtNoofUnits;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientName1;
    // End of variables declaration//GEN-END:variables

}
