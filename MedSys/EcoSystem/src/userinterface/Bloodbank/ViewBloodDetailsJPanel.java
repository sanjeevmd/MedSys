/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Bloodbank;

import Business.Blood.BloodGroup;
import Business.Blood.BloodGroupList;
import Business.Enterprise.Enterprise;
import Business.Organization.ClinicianOrganization;
import Business.Organization.DriverOrganization;
import Business.Organization.LabOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import static Logger.Logger.logger;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author harshi
 */
public class ViewBloodDetailsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewBloodDetailsJPanel
     */
    private JPanel userProcessContainer;
    private ClinicianOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private BloodGroup bloodgroup;
    private BloodGroupList bloodgrouplist;

    public ViewBloodDetailsJPanel(JPanel userProcessContainer, BloodGroup bloodgroup, BloodGroupList bloodgrouplist, Enterprise enterprise,UserAccount useraccount) {
        logger.log(Level.INFO, "ViewBloodDetailsJPanel");

        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.bloodgroup = bloodgroup;
        this.bloodgrouplist = bloodgrouplist;
        this.userAccount=useraccount;

        updateDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btnBack = new javax.swing.JButton();
        sendToDoctorPanel = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        bgTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        unitsAddTextBox = new javax.swing.JTextField();
        existingUnits = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        sendToDoctorPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Blood Group");

        jLabel2.setText("No of Units to be added");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        unitsAddTextBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                unitsAddTextBoxKeyTyped(evt);
            }
        });

        existingUnits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingUnitsActionPerformed(evt);
            }
        });

        jLabel3.setText("Available Units");

        jLabel5.setText("Verified Blood?");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Yes");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("No");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Test Blood");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        sendToDoctorPanel.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        sendToDoctorPanel.setLayer(bgTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        sendToDoctorPanel.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        sendToDoctorPanel.setLayer(btnUpdate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        sendToDoctorPanel.setLayer(btnSave, javax.swing.JLayeredPane.DEFAULT_LAYER);
        sendToDoctorPanel.setLayer(unitsAddTextBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        sendToDoctorPanel.setLayer(existingUnits, javax.swing.JLayeredPane.DEFAULT_LAYER);
        sendToDoctorPanel.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        sendToDoctorPanel.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        sendToDoctorPanel.setLayer(jRadioButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        sendToDoctorPanel.setLayer(jRadioButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        sendToDoctorPanel.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout sendToDoctorPanelLayout = new javax.swing.GroupLayout(sendToDoctorPanel);
        sendToDoctorPanel.setLayout(sendToDoctorPanelLayout);
        sendToDoctorPanelLayout.setHorizontalGroup(
            sendToDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sendToDoctorPanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(sendToDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addGroup(sendToDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sendToDoctorPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(sendToDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(unitsAddTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(existingUnits, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bgTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(sendToDoctorPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(sendToDoctorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addGap(46, 46, 46)
                .addComponent(jButton1)
                .addGap(17, 17, 17))
        );
        sendToDoctorPanelLayout.setVerticalGroup(
            sendToDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sendToDoctorPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(sendToDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(bgTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(sendToDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(existingUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(sendToDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(unitsAddTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(sendToDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(sendToDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnSave)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        add(sendToDoctorPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, 400, 230));

        jLabel4.setFont(new java.awt.Font("Tamil MN", 1, 18)); // NOI18N
        jLabel4.setText("UPDATE BLOOD DETAILS");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void updateDetails() {
        logger.log(Level.INFO, "updateDetails --ViewBloodDetailsJPanel");

        bgTextField.setText(bloodgroup.getBloodgroup());
        String bloodunits = bloodgroup.getAvailableUnits();
        existingUnits.setText(bloodunits);

        bgTextField.setEnabled(false);
        unitsAddTextBox.setEnabled(false);
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);
        existingUnits.setEnabled(false);
        jButton1.setEnabled(false);
    }
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnSaveActionPerformed --ViewBloodDetailsJPanel");

        try{
        String bg = bgTextField.getText();
        String nu = unitsAddTextBox.getText();
        int newUnits = Integer.parseInt(nu);
        int existingUnits = Integer.parseInt(bloodgroup.getAvailableUnits());
        String totalUnits = String.valueOf(newUnits + existingUnits);
        
        if(nu.isEmpty() || nu == null || (!jRadioButton1.isSelected() && !jRadioButton2.isSelected()) )
        {
            JOptionPane.showMessageDialog(null, "Fields cannot be empty");
            return;
        }
        
        else{
        bloodgroup.setBloodgroup(bg);
        bloodgroup.setAvailableUnits(totalUnits);
        JOptionPane.showMessageDialog(null, "Blood Details updated successfully");
        }
        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "Fields cannot be empty");
           return;
        }
         
        bgTextField.setEnabled(false);
        unitsAddTextBox.setEnabled(false);
        this.existingUnits.setEnabled(false);
        
       

        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnUpdateActionPerformed --ViewBloodDetailsJPanel");

        bgTextField.setEnabled(false);
        unitsAddTextBox.setEnabled(true);
        btnSave.setEnabled(true);
        btnUpdate.setEnabled(false);
        jButton1.setEnabled(false);
        this.existingUnits.setEnabled(false);
        jRadioButton1.setEnabled(true);
        jRadioButton2.setEnabled(true);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        logger.log(Level.INFO, "btnBackActionPerformed --ViewBloodDetailsJPanel");

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ClinicianWorkAreaJPanel dwjp = (ClinicianWorkAreaJPanel) component;
        dwjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);


    }//GEN-LAST:event_btnBackActionPerformed

    private void existingUnitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingUnitsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_existingUnitsActionPerformed

    private void unitsAddTextBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unitsAddTextBoxKeyTyped
        // TODO add your handling code here:
        logger.log(Level.INFO, "unitsAddTextBoxKeyTyped --ViewBloodDetailsJPanel");

        char vchar = evt.getKeyChar();
        if (!(Character.isDigit(vchar))
                || (vchar == KeyEvent.VK_BACK_SPACE)
                || (vchar == KeyEvent.VK_DELETE)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Please enter a number");
        }

    }//GEN-LAST:event_unitsAddTextBoxKeyTyped

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        btnSave.setEnabled(true);
        jButton1.setEnabled(false);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        jButton1.setEnabled(true);
        btnSave.setEnabled(false);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
        String bloodgroup = bgTextField.getText();
        for (BloodGroup bg : bloodgrouplist.getBloodGroupList()) {
                if (bg.getBloodgroup().equals(bloodgroup)) {
                    this.bloodgroup = bg;
                }
            }
        int newUnits = Integer.parseInt(unitsAddTextBox.getText());
        LabTestWorkRequest lt = new LabTestWorkRequest(this.bloodgroup);
        lt.setBloodgroup(this.bloodgroup);
        lt.setUnits(String.valueOf(newUnits));
        lt.setStatus(LabTestWorkRequest.REQUEST_PENDING);
        
        Organization organization = null;
        if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.BloodBank) {
            for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (org instanceof LabOrganization) {
                    organization = org;
                    organization.getWorkQueue().getWorkRequestList().add(lt);
                    userAccount.getWorkQueue().getWorkRequestList().add(lt);
                    organization = null;

                }
            }
        }
        JOptionPane.showMessageDialog(null, "Work Request has been submitted successfully");
        unitsAddTextBox.setEnabled(false);
        jButton1.setEnabled(false);
        return;
        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "Fields cannot be empty");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bgTextField;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField existingUnits;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JLayeredPane sendToDoctorPanel;
    private javax.swing.JTextField unitsAddTextBox;
    // End of variables declaration//GEN-END:variables

   
}
