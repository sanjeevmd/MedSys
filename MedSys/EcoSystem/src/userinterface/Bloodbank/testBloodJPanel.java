/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Bloodbank;

import Business.Blood.BloodGroup;
import Business.Blood.BloodGroupList;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.ClinicianOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BloodReqToNewBB;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import static Logger.Logger.logger;
import javax.swing.JPanel;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harshi
 */
public class testBloodJPanel extends javax.swing.JPanel {

    /**
     * Creates new form testBloodJPanel
     */
    private JPanel userProcessContainer;
    private ClinicianOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private BloodGroup bloodgroup;
    private BloodGroupList bloodgrouplist;
    private EcoSystem ecosystem;

    testBloodJPanel(JPanel userProcessContainer, BloodGroup bloodgroup, BloodGroupList bloodgrouplist, Enterprise enterprise, UserAccount userAccount, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.bloodgroup = bloodgroup;
        this.bloodgrouplist = bloodgrouplist;
        this.ecosystem = ecosystem;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.organization = organization;
        
        populatereqItemsTable();

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnBack = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        reqItemsTable = new javax.swing.JTable();
        manageEnt2 = new javax.swing.JLabel();

        BtnBack.setText("Back");
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tamil MN", 1, 18)); // NOI18N
        jLabel4.setText("CLINICIAN WORK REQUEST AREA");

        reqItemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Blood Group", "Total Units", "Request Status", "Assigned To", "Impure Units"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(reqItemsTable);
        if (reqItemsTable.getColumnModel().getColumnCount() > 0) {
            reqItemsTable.getColumnModel().getColumn(0).setResizable(false);
            reqItemsTable.getColumnModel().getColumn(1).setResizable(false);
            reqItemsTable.getColumnModel().getColumn(2).setResizable(false);
        }

        manageEnt2.setFont(new java.awt.Font("Tamil MN", 1, 18)); // NOI18N
        manageEnt2.setText("Requested Items");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(BtnBack)
                        .addGap(174, 174, 174)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(370, 370, 370)
                        .addComponent(manageEnt2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(183, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(BtnBack))
                .addGap(36, 36, 36)
                .addComponent(manageEnt2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(431, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void populatereqItemsTable() {
        logger.log(Level.INFO, "populatereqItemsTable --Test Blood Request");

        DefaultTableModel model = (DefaultTableModel) reqItemsTable.getModel();

        model.setRowCount(0);

        for (WorkRequest ua : userAccount.getWorkQueue().getWorkRequestList()) {
                 if(ua.getClass().getName().contains("LabTestWorkRequest")){
            Object[] row = new Object[5];
            row[0] = ((LabTestWorkRequest) ua);          
            row[1] = ((LabTestWorkRequest) ua).getUnits();
            row[2] = ((LabTestWorkRequest) ua).getStatus();
            try {
                row[3] = ua.getReceiver().getEmployee().getName();
            } catch (NullPointerException e) {
                row[3] = "No Assignee Yet";
            }
            try{
                row[4] = ((LabTestWorkRequest)ua).getImpureUnits();
            }
            catch(NullPointerException e) {
                row[4] = "Not Updated Yet";
            }
            model.addRow(row);
        }
        }
    }
    
    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
        // TODO add your handling code here:
      //  logger.log(Level.INFO, "BtnBackActionPerformed --SendReqJPanel");

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ClinicianWorkAreaJPanel dwjp = (ClinicianWorkAreaJPanel) component;
        dwjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_BtnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBack;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel manageEnt2;
    private javax.swing.JTable reqItemsTable;
    // End of variables declaration//GEN-END:variables
}
