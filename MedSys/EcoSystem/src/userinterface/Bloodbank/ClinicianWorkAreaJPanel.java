/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Bloodbank;

import Business.Blood.BloodGroup;
import Business.Blood.BloodGroupList;
import Business.EcoSystem;
import Business.Enterprise.BloodBank;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Enterprise.EnterpriseType;
import Business.Organization.ClinicianOrganization;
import Business.Organization.ManagerOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import static Logger.Logger.logger;
import java.awt.CardLayout;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harshi
 */
public class ClinicianWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ClinicianWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private ClinicianOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private BloodGroup bloodgroup;
    private BloodGroupList bloodgrouplist;
    private EcoSystem ecosystem;

    public ClinicianWorkAreaJPanel(JPanel userProcessContainer, UserAccount userAccount, ClinicianOrganization clinicianOrganization, Enterprise enterprise, EcoSystem ecosystem) {
        logger.log(Level.INFO, "ClinicianWorkAreaJPanel");

        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.bloodgrouplist = enterprise.getBloodgrouplist();
        this.ecosystem = ecosystem;
        populateTable();
        //valueLabel.setText(enterpr

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        OverallBloodTable = new javax.swing.JTable();
        btnUpdateBloodUnits = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        btnBloodReq = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        btnHospitalReq1 = new javax.swing.JButton();
        btnEMSReq1 = new javax.swing.JButton();
        btnViewReq1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        OverallBloodTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Blood Group", "Available Units"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(OverallBloodTable);
        if (OverallBloodTable.getColumnModel().getColumnCount() > 0) {
            OverallBloodTable.getColumnModel().getColumn(0).setResizable(false);
            OverallBloodTable.getColumnModel().getColumn(1).setResizable(false);
        }

        btnUpdateBloodUnits.setText("Update Blood Units");
        btnUpdateBloodUnits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateBloodUnitsActionPerformed(evt);
            }
        });

        btnCreate.setText("New Blood Group");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnBloodReq.setText("Request Blood");
        btnBloodReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBloodReqActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jLayeredPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btnUpdateBloodUnits, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btnCreate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btnBloodReq, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btnRefresh, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBloodReq, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateBloodUnits, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23))))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate)
                    .addComponent(btnUpdateBloodUnits))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefresh)
                    .addComponent(btnBloodReq))
                .addGap(53, 53, 53))
        );

        add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 460, 390));

        jLabel1.setFont(new java.awt.Font("Tamil MN", 1, 18)); // NOI18N
        jLabel1.setText("Blood Details");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tamil MN", 1, 18)); // NOI18N
        jLabel2.setText("CLINICIAN WORK AREA");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, -1, -1));

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnHospitalReq1.setText("View Hospital Work Requests");
        btnHospitalReq1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalReq1ActionPerformed(evt);
            }
        });

        btnEMSReq1.setText("View Emergency Requests");
        btnEMSReq1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEMSReq1ActionPerformed(evt);
            }
        });

        btnViewReq1.setText("View Blood Bank Work Requests");
        btnViewReq1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewReq1ActionPerformed(evt);
            }
        });

        jButton3.setText("View Blood Test Requests");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLayeredPane2.setLayer(btnHospitalReq1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(btnEMSReq1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(btnViewReq1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jButton3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEMSReq1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHospitalReq1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewReq1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(btnViewReq1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnHospitalReq1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEMSReq1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        add(jLayeredPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 250, 290, 230));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnRefreshActionPerformed --ClinicianWorkAreaJPanel");

        populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnUpdateBloodUnitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateBloodUnitsActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnUpdateBloodUnitsActionPerformed --ClinicianWorkAreaJPanel");

        int selectedrow = OverallBloodTable.getSelectedRow();

        if (selectedrow >= 0) {
            BloodGroup bloodgroup = (BloodGroup) OverallBloodTable.getValueAt(selectedrow, 0);
            ViewBloodDetailsJPanel panel = new ViewBloodDetailsJPanel(userProcessContainer, bloodgroup, bloodgrouplist,enterprise,userAccount);
            userProcessContainer.add("CreateJPanel", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } 
        else{
        JOptionPane.showMessageDialog(null, "Please select a BloodGroup"); }


    }//GEN-LAST:event_btnUpdateBloodUnitsActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnCreateActionPerformed --ClinicianWorkAreaJPanel");

        createBloodGroupJPanel panel = new createBloodGroupJPanel(userProcessContainer, bloodgroup, bloodgrouplist);
        userProcessContainer.add("CreateJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnBloodReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBloodReqActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnBloodReqActionPerformed --ClinicianWorkAreaJPanel");

        int selectedrow = OverallBloodTable.getSelectedRow();

        if (selectedrow >= 0) {
            BloodGroup bloodgroup = (BloodGroup) OverallBloodTable.getValueAt(selectedrow, 0);
            SendReqJPanel panel = new SendReqJPanel(userProcessContainer, bloodgroup, bloodgrouplist, enterprise, userAccount, ecosystem);
            userProcessContainer.add("SendReqJPanel", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } 
        else
        JOptionPane.showMessageDialog(null, "Please select BloodGroup");

    }//GEN-LAST:event_btnBloodReqActionPerformed

    private void btnHospitalReq1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalReq1ActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnHospitalReqActionPerformed --ClinicianWorkAreaJPanel");

        HospitalReqJPanel panel = new HospitalReqJPanel(userProcessContainer, bloodgroup, bloodgrouplist, enterprise, userAccount, ecosystem);
        userProcessContainer.add("CreateJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_btnHospitalReq1ActionPerformed

    private void btnEMSReq1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEMSReq1ActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnEMSReqActionPerformed --ClinicianWorkAreaJPanel");

        EMSReqJPanel panel = new EMSReqJPanel(userProcessContainer, bloodgroup, bloodgrouplist, enterprise, userAccount, ecosystem);
        userProcessContainer.add("CreateJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnEMSReq1ActionPerformed

    private void btnViewReq1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewReq1ActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnViewReqActionPerformed --ClinicianWorkAreaJPanel");

        ClinicianWorkReq panel = new ClinicianWorkReq(userProcessContainer, bloodgroup, bloodgrouplist, enterprise, userAccount, ecosystem);
        userProcessContainer.add("CreateJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewReq1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "btnViewReqActionPerformed --ClinicianWorkAreaJPanel");

        testBloodJPanel panel = new testBloodJPanel(userProcessContainer, bloodgroup, bloodgrouplist, enterprise, userAccount, ecosystem);
        userProcessContainer.add("CreateJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton3ActionPerformed


    void populateTable() {
        logger.log(Level.INFO, "populateTable --ClinicianWorkAreaJPanel");

        DefaultTableModel dtm = (DefaultTableModel) OverallBloodTable.getModel();
        dtm.setRowCount(0);

        for (BloodGroup bloodgroup : bloodgrouplist.getBloodGroupList()) {

            Object row[] = new Object[2];
            row[0] = bloodgroup;
            row[1] = bloodgroup.getAvailableUnits();
            
            dtm.addRow(row);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable OverallBloodTable;
    private javax.swing.JButton btnBloodReq;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnEMSReq1;
    private javax.swing.JButton btnHospitalReq1;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpdateBloodUnits;
    private javax.swing.JButton btnViewReq1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
