/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.Allergy.Allergy;
import Business.Medications.Medication;
import Business.Patients.Patient;
import static Logger.Logger.logger;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sanjeev MD
 */
public class AllergyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AllergyJPanel
     */
    private JPanel userProcessContainer;

    private Patient patient;

    public AllergyJPanel(JPanel userProcessContainer, Patient patient) {
        logger.log(Level.INFO, "AllergyJPanel");

        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.patient = patient;
        populateStaticTable();
        populatePatientTable();
    }

    public void populatePatientTable() {
        logger.log(Level.INFO, "populatePatientTable --AllergyJPanel");

        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        if (patient.getAllergies().getAllergyList().size() == 0) {
            return;
        }
        for (Allergy alg : patient.getAllergies().getAllergyList()) {
            Object row[] = new Object[2];
            row[0] = alg;
            int count = 0;
            String compounds = null;
            for (String compound : alg.getCompound()) {
                if (count == 0) {
                    compounds = compound;
                } else {
                    compounds = compounds + ", " + compound;
                }
                count++;
            }
            row[1] = compounds;
            dtm.addRow(row);
        }
    }

    public void populateStaticTable() {
        logger.log(Level.INFO, "populateStaticTable --AllergyJPanel");

        ArrayList<Allergy> allergies = new ArrayList<Allergy>();
        ArrayList<String> lactCompunds = new ArrayList<String>();
        lactCompunds.add("clemastine");
        lactCompunds.add("Sugar");
        lactCompunds.add("Sucrose");
        Allergy lactallergy = new Allergy("Lactose Intolerance", lactCompunds);
        allergies.add(lactallergy);

        DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
        dtm.setRowCount(0);

        for (Allergy alg : allergies) {
            Object row[] = new Object[2];
            row[0] = alg;
            int count = 0;
            String compounds = null;
            for (String compound : alg.getCompound()) {
                if (count == 0) {
                    compounds = compound;
                } else {
                    compounds = compounds + ", " + compound;
                }
                count++;
            }
            row[1] = compounds;
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        BtnaddAllergy = new javax.swing.JButton();
        BtnremoveAllergy = new javax.swing.JButton();
        BtnBack = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Allergy", "Compounds"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 270, 375, 110));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Allergy", "Compounds"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 122, 375, 95));

        BtnaddAllergy.setText("Add Allergy");
        BtnaddAllergy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnaddAllergyActionPerformed(evt);
            }
        });
        add(BtnaddAllergy, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 223, -1, -1));

        BtnremoveAllergy.setText("Remove Allergy");
        BtnremoveAllergy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnremoveAllergyActionPerformed(evt);
            }
        });
        add(BtnremoveAllergy, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 386, -1, -1));

        BtnBack.setText("Back");
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });
        add(BtnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void BtnaddAllergyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnaddAllergyActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "BtnaddAllergyActionPerformed --AllergyJPanel");

        int selectedRow = jTable2.getSelectedRow();
        if (selectedRow >= 0) {
            Allergy allergy = (Allergy) jTable2.getValueAt(selectedRow, 0);
            if (patient.getAllergies().checkexist(allergy)) {
                Medication med = patient.getMedList().checkMedwhileAddAllergy(allergy);
                if (med == null) {
                    patient.getAllergies().addAllergy(allergy);
                    JOptionPane.showMessageDialog(userProcessContainer, "Allergy added successfully");
                    populatePatientTable();
                    return;
                } else {
                    int yesno = JOptionPane.YES_NO_OPTION;
                    int option = JOptionPane.showConfirmDialog(userProcessContainer, "Curreclty medication has been prescribed "
                            + " which is allergic to the patient. Do you want to discontinue medication and add allergy", "Override Warning",
                            yesno);
                    if (option == JOptionPane.YES_OPTION) {
                        med.setIsdiscontinue(true);
                        patient.getAllergies().addAllergy(allergy);
                        populatePatientTable();
                        return;
                    } else {
                        int secondoption = JOptionPane.showConfirmDialog(userProcessContainer, "Do you still want to add allergy?", "Warning",
                                yesno);
                        if (secondoption == JOptionPane.YES_OPTION) {
                            patient.getAllergies().addAllergy(allergy);
                            populatePatientTable();
                            return;
                        } else {
                            populatePatientTable();
                            return;
                        }
                    }
                }

            } else {
                JOptionPane.showMessageDialog(userProcessContainer, "Allergy has already been added");
                populatePatientTable();
                return;
            }
        }
    }//GEN-LAST:event_BtnaddAllergyActionPerformed

    private void BtnremoveAllergyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnremoveAllergyActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "BtnremoveAllergyActionPerformed --AllergyJPanel");

        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {
            Allergy allergy = (Allergy) jTable1.getValueAt(selectedRow, 0);
            patient.getAllergies().getAllergyList().remove(allergy);
            JOptionPane.showMessageDialog(userProcessContainer, "Allergy removed successfully");
            return;
        } else {
            JOptionPane.showMessageDialog(userProcessContainer, "Please select a allergy to remove");
            return;
        }

    }//GEN-LAST:event_BtnremoveAllergyActionPerformed

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
        // TODO add your handling code here:
        logger.log(Level.INFO, "BtnBackActionPerformed --AllergyJPanel");

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_BtnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBack;
    private javax.swing.JButton BtnaddAllergy;
    private javax.swing.JButton BtnremoveAllergy;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
